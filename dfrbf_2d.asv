[X, Y] = meshgrid(0:0.1:1);

U = 2*X + Y.^2;
V = X.^2 + 2*Y;

quiver(X, Y, U, V);

A_test = constructA(points, points_test, epsilon);
f_test = A_test * c;



function H = rbfHessian(x, epsilon)
    H = zeros([2 2 size(x, 1)]);
    ex = exp(-((epsilon * norm2(x)).^2));
    H(1, 1, :) = epsilon^4 * x(:,1).^2 .* ex - 1/2 * epsilon^2 * ex;
    H(2, 2, :) = epsilon^4 * x(:,2).^2 .* ex - 1/2 * epsilon^2 * ex;
    
    H(1, 2, :) = x(:,1) .* x(:,2) .* epsilon^4 .* ex;
    H(2, 1, :) = H(1, 2, :);

    H = H.*4;
end

function A = constructA(x_train, x_eval, epsilon)
    n_train = size(x_train, 1);
    n_eval = size(x_eval, 1);
    A = zeros([2*n_eval 2*n_train]);
    for i=1:n_eval
        H = rbfHessian(x_eval(i,:) - x_train, epsilon);
        A((i-1)*3 + 1 : (i-1)*3 + 3, :) = reshape(H, [3 3*n_train]);
        %for j=1:n
        %    A((i-1)*3 + 1 : (i-1)*3 + 3, (j-1)*3 + 1 : (j-1)*3 + 3) = H(j, :, :);
        %end
    end
end