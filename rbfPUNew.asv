function func = rbfPUNew(train_pos, train_val, rbf_func, N, rho)
    [patches, patch_indc] = constructPatches(train_pos, N, rho);
    s_js = cell(size(patches,1), 1);
    for i=1:size(patches, 1)
        s_js{i} = rbf(train_pos(patch_indc{i}, :), train_val(patch_indc{i}), rbf_func);
    end
    
    function v = evalRbfPU(x)
        w_func = @(r) (1 - r ./ rho).^2 .* (r < rho) .* (4 * r / rho + 2);
        v = zeros(size(x,1),1);
        dist = distanceMatrix(patches, x); % shape (n_x, n_patches) so each row is for one x-point
        isClose = dist <= rho;
        wAll = w_func(dist);
        wAll = wAll ./ sum(wAll, 2);
        for j=1:size(patches, 1)
            active_points = isClose(:,j);
            w = wAll(); w_func(dist(active_points,j));
            
            x_ = x(active_points,:);
            s_j = s_js{j};
            y_j = s_j(x_); % (n_x, 1)
            v(active_points) = v(active_points) + y_j .* w;
        end

%         dist = distanceMatrix(patches, x); % shape (n_x, n_patches) so each row is for one x-point
%         %isClose = dist <= rho;
%         wAll = w_func(dist);
%         wAll = wAll ./ sum(wAll, 2);
%         for j=1:size(patches, 1)
%             s_j = s_js{j};
%             y_j = s_j(x); % (n_x, 1)
%             v = v + y_j .* wAll(:,j);
%         end

%         for k=1:size(x,1)
%             x_ = x(k,:);
%             
%             active_patches = norm2(patches - x_) <= rho;
%             active_patches_idx = find(active_patches);
%             if(isempty(active_patches_idx))
%                 v(k) = nan;
%             else
%                 w = w_func(norm2(patches(active_patches, :) - x_));
%                 w = w ./ sum(w); % Normalize w
%                 v(k) = 0;
%                 for jk=1:length(active_patches_idx)
%                     j = active_patches_idx(jk);
%                     s_j = s_js{j};
%                     w_j = w(jk);
%                     v(k) = v(k) + s_j(x_).*w_j;
%                 end
%             end
%         end
    end
    func = @evalRbfPU;
end